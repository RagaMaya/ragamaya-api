// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"github.com/midtrans/midtrans-go/coreapi"
	"gorm.io/gorm"
	"ragamaya-api/api/orders/repositories"
	"ragamaya-api/api/orders/services"
	repositories2 "ragamaya-api/api/payments/repositories"
	repositories3 "ragamaya-api/api/products/repositories"
	repositories4 "ragamaya-api/api/wallets/repositories"
	services2 "ragamaya-api/api/wallets/services"
	"ragamaya-api/midtrans/notifications/controllers"
	services3 "ragamaya-api/midtrans/notifications/services"
)

// Injectors from injector.go:

func InitializeNotificationController(db *gorm.DB, validate *validator.Validate, midtransCore *coreapi.Client) controllers.CompControllers {
	compRepositories := repositories.NewComponentRepository()
	repositoriesCompRepositories := repositories2.NewComponentRepository()
	compRepositories2 := repositories3.NewComponentRepository()
	compServices := services.NewComponentServices(compRepositories, db, validate, midtransCore, repositoriesCompRepositories, compRepositories2)
	compRepositories3 := repositories4.NewComponentRepository()
	servicesCompServices := services2.NewComponentServices(compRepositories3, db, validate)
	compServices2 := services3.NewComponentServices(db, validate, compServices, compRepositories, repositoriesCompRepositories, compRepositories2, servicesCompServices)
	compControllers := controllers.NewCompController(compServices2)
	return compControllers
}

// injector.go:

var notificationFeatureSet = wire.NewSet(services3.NewComponentServices, controllers.NewCompController, services.NewComponentServices, repositories.NewComponentRepository, repositories2.NewComponentRepository, repositories3.NewComponentRepository, services2.NewComponentServices, repositories4.NewComponentRepository)
