name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t ragamaya-api:latest .
        docker save ragamaya-api:latest | gzip > app-image.tar.gz
    
    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "app-image.tar.gz,docker-compose.yml"
        target: "/home/${{ secrets.VPS_USER }}/app"
    
    - name: Deploy on VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /home/${{ secrets.VPS_USER }}/app
          
          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            echo "PORT=8013" > .env
          fi
          
          # Load the new image
          docker load < app-image.tar.gz
          
          # Stop existing containers
          docker-compose down
          
          # Start with new image
          docker-compose up -d
          
          # Clean up
          rm app-image.tar.gz
          docker image prune -f